// ---------------------------------------------------------------------------

#pragma hdrstop

#include "ConjuntoV.h"
// ---------------------------------------------------------------------------
#pragma package(smart_init)

ConjuntoV::ConjuntoV() {
	v = new bool[MAX_C];
	cant = 0;
}

bool ConjuntoV::vacio() {
	return cant == 0;
}

bool ConjuntoV::pertenece(int e) {
	if (e >= 1 && e <= MAX_C)
		return v[e - 1];
	return false;
}

void ConjuntoV::inserta(int e) {
	if (!pertenece(e))
		v[e - 1] = true;
}

void ConjuntoV::suprime(int e) {
	if (pertenece(e))
		v[e - 1] = false;
}

int ConjuntoV::cardinal() {
	return cant;
}

int ConjuntoV::ordinal(int e) {
	int c = 0;
	for(int i = 0;i < MAX_C;i++){
		if(v[i]){
			c++;
			if(i + 1 == e)
                return c;
		}
	}

}

int ConjuntoV::muestrea() {
}

string ConjuntoV::to_str() {
}
